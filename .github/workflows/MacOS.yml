name: MacOS
on: [push, pull_request,repository_dispatch]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash

jobs:
  macos:
    name: MacOS Release (${{ matrix.osx_build_arch }})
    runs-on: macos-latest
    strategy:
      matrix:
        duckdb_version: [ '<submodule_version>' ]
        vcpkg_version: [ '2023.04.15' ]
        vcpkg_triplet: [ 'x64-osx']
        osx_build_arch: ['x86_64']
        duckdb_arch: ['osx_amd64']

    env:
      VCPKG_TARGET_TRIPLET: ${{ matrix.vcpkg_triplet }}
      OSX_BUILD_ARCH: ${{ matrix.osx_build_arch }}
      GEN: Ninja
      VCPKG_TOOLCHAIN_PATH: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
      AZURE_STORAGE_CONNECTION_STRING: 'DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1;TableEndpoint=http://127.0.0.1:10002/devstoreaccount1;'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Install Ninja
        run: brew install ninja

      - name: Setup Ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: ${{ github.job }}-${{ matrix.duckdb_version }}
          save: ${{ github.ref == 'refs/heads/main' || github.repository != 'duckdb/duckdb' }}

      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: a42af01b72c28a8e1d7b48107b33e4f286a55ef6

      - name: Build extension
        shell: bash
        run: |
          make release

      - uses: actions/setup-node@v3
      - name: Launch & populate Azure test service
        if: ${{ matrix.osx_build_arch == 'x86_64'}}
        run: |
          brew install squid
          npm install -g azurite
          ./scripts/run_squid.sh --port 3128 --log_dir squid_logs &
          ./scripts/run_squid.sh --port 3129 --log_dir squid_auth_logs --auth &
          azurite > azurite_log.txt 2>&1 &
          sleep 10
          ./scripts/upload_test_files_to_azurite.sh

      - name: Test Extension
        if: ${{ matrix.osx_build_arch == 'x86_64'}}
        shell: bash
        run: |
          make test

      - name: Azure test server log
        if: always() && matrix.osx_build_arch == 'x86_64'
        shell: bash
        run: |
          echo "## azurite"
          cat azurite_log.txt
          
          echo "## squid"
          cat squid_logs/*

          echo "## squid with auth"
          cat squid_auth_logs/*
