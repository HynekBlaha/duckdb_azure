name: Windows
on: [push, pull_request,repository_dispatch]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash

jobs:
  windows:
    name: Release
    runs-on: windows-latest
    strategy:
      matrix:
        # Add commits/tags to build against other DuckDB versions
        duckdb_version: [ '<submodule_version>' ]
        vcpkg_version: [ '2023.04.15' ]
        vcpkg_triplet: ['x64-windows']
    env:
      VCPKG_TARGET_TRIPLET: ${{ matrix.vcpkg_triplet }}
      GEN: Ninja
      VCPKG_ROOT: ${{ github.workspace }}\vcpkg
      VCPKG_TOOLCHAIN_PATH: ${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake
      AZURE_STORAGE_CONNECTION_STRING: 'DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1;TableEndpoint=http://127.0.0.1:10002/devstoreaccount1;'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Setup vcpkg
        if: ${{ inputs.vcpkg == 1 }}
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: 501db0f17ef6df184fcdbfbe0f87cde2313b6ab1

      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Checkout DuckDB to version
        # Add commits/tags to build against other DuckDB versions
        if: ${{ matrix.duckdb_version != '<submodule_version>'}}
        run: |
          cd duckdb
          git checkout ${{ matrix.duckdb_version }}

      - name: Build extension
        run: |
          make release

      - uses: actions/setup-node@v3

      - name: Launch & populate Azure test service
        run: |
          npm install -g azurite
          azurite &
          sleep 10
          ./scripts/upload_test_files_to_azurite.sh

      - name: Test Extension
        shell: bash
        run: |
          build/release/test/Release/unittest.exe --test-dir . "[sql]"

      - uses: actions/upload-artifact@v2
        with:
          name: windows-extension
          path: |
            build/release/extension/azure/azure.duckdb_extension

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_DEPLOY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_DEPLOY_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.S3_REGION }}
          BUCKET_NAME: ${{ secrets.S3_BUCKET }}
          DUCKDB_EXTENSION_SIGNING_PK: ${{ secrets.DUCKDB_EXTENSION_SIGNING_KEY }}
        run: |
          cd duckdb
          git fetch --tags
          export DUCKDB_VERSION=`git tag --points-at HEAD`
          export DUCKDB_VERSION=${DUCKDB_VERSION:=`git log -1 --format=%h`}
          cd ..
          if [[ "$AWS_ACCESS_KEY_ID" == "" ]] ; then
            echo 'No key set, skipping'
          elif [[ "$GITHUB_REF" =~ ^(refs/tags/v.+)$ ]] ; then
            python -m pip install awscli
            ./scripts/extension-upload.sh azure ${{ github.ref_name }} $DUCKDB_VERSION windows_amd64 $BUCKET_NAME true 
          elif [[ "$GITHUB_REF" =~ ^(refs/heads/main)$ ]] ; then
            python -m pip install awscli
            ./scripts/extension-upload.sh azure `git log -1 --format=%h` $DUCKDB_VERSION windows_amd64 $BUCKET_NAME false 
          fi